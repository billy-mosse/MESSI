:mod:`Utils`
============

.. py:module:: Utils


Module Contents
---------------

.. data:: debug
   :annotation: = False

   

.. function:: combination_util(arr, n, r, index, data, i, L)

.. function:: get_r_subsets(arr, r)
   The main function that 
   prints all combinations 
   of  size r in arr[] of 
   size n. This function  
   mainly uses combination_util() 


.. function:: i(cols)

.. function:: minor(A, cols)

.. function:: is_conformal(orthant, circuit)

.. function:: has_equal_sign(orthant, circuit)
   returns true iff the circuit parameter has equal sign as the orthant


.. function:: union(conformal_circuits)
   returns the sum of the conformal circuits list.
       


.. function:: orthant_has_conformal_circuit(orthant, sign_information_M)
   unused function that checks if the orthant parameter is conformal
   to any of M's circuits


.. function:: get_kappa(x1, x2)
   M = matrix([
   [-x1[0] * x1[8], x1[4], 0, 0, 0, 0, 0, 0, 0, -x1[3] * x1[0], -x1[7], 0],
   [0, 0, x1[4], -x1[1] * x1[0],  x1[5], 0, -x1[2]*x1[1], x1[6], x1[6], 0, 0, 0],
   [0, 0, 0, 0, 0, 0, -x1[2] * x1[1], x1[6], 0, 0, 0, -x1[7]],
   [0, 0, 0, 0, 0, 0, 0, 0, x1[6], x1[3]*x1[0], x1[7], 0],
   [x1[0]*x1[8], -x1[4], -x1[4], 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, x1[1]*x1[0], -x1[5], -x1[5], 0, 0, 0, 0, 0, 0],
   [0, 0, 0, 0, 0, 0, x1[2]*x1[1], -x1[6], -x1[6], 0, 0, 0],
   [0, 0, 0, 0, 0, 0, 0, 0, 0, x1[3]*x1[0], -x1[7], x1[7]],
   [-x1[0]*x1[8], x1[4], x1[4], 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, -x1[1]*x1[0], x1[5], x1[5], 0, 0, 0, 0, 0, x1[7]]
   ])


.. function:: get_multistationarity_witnesses(v, w, s, d)

